# used this gist for handling redirect
# https://gist.github.com/sirsquidness/710bc76d7bbc734c7a3ff69c6b8ff591

proxy_cache_path /data/nginx/cache keys_zone=github:1m levels=1:2 inactive=1d max_size=10m;

server {
    listen       80;
    server_name  localhost;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    location /github.com/pongasoft {
      proxy_pass        https://github.com/pongasoft;
      proxy_cache       github;
      proxy_cache_key   $uri;
      proxy_cache_valid 200 206 24h;
      proxy_intercept_errors on;
      error_page 301 302 307 = @handle_redirects;
    }

    location @handle_redirects {
       # the purpose of this resolver is because "proxy_pass $orig_loc" tries to
       # do a resolve and for some reason, it does not work inside Docker
       resolver 8.8.8.8;
       
       #store the current state of the world so we can reuse it in a minute
       # We need to capture these values now, because as soon as we invoke 
       # the proxy_* directives, these will disappear
       set $original_uri $uri;
       set $orig_loc $upstream_http_location;

       # nginx goes to fetch the value from the upstream Location header
       proxy_pass        $orig_loc;
       proxy_cache       github;
       # But we store the result with the cache key of the original request URI
       # so that future clients don't need to follow the redirect too
       proxy_cache_key $original_uri;
       proxy_cache_valid 200 206 24h;
    }

    # try to locate the file in 2 different locations
    location / {
        root   /usr/share/nginx/html;
        try_files /static/$uri /dynamic/$uri =400;
        index  index.html index.htm;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

}
